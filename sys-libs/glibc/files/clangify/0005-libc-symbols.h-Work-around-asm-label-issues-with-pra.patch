From 2efaa75a5daddbaf84f3c7e8d545a02894eb0364 Mon Sep 17 00:00:00 2001
From: Fangrui Song <maskray@google.com>
Date: Sat, 25 Sep 2021 18:50:02 -0700
Subject: [PATCH 05/19] libc-symbols.h: Work around asm label issues with
 #pragma redefine_extname

Using asm labels can lead to `error: cannot apply asm label to function after its first use`
in many places. `#pragma redefine_extname` has the same behavior with an asm label, but avoids the error.

The symbol will not be properly renamed to a non-default version symbol.
---
 include/libc-symbols.h | 12 +++++++++++-
 1 file changed, 11 insertions(+), 1 deletion(-)

diff --git a/include/libc-symbols.h b/include/libc-symbols.h
index d41ecf4384..8a5a9ff0b3 100644
--- a/include/libc-symbols.h
+++ b/include/libc-symbols.h
@@ -534,9 +534,19 @@ for linking")
   __hidden_proto (name, , __GI_##name, ##attrs)
 #  define hidden_tls_proto(name, attrs...) \
   __hidden_proto (name, __thread, __GI_##name, ##attrs)
-#  define __hidden_proto(name, thread, internal, attrs...)	     \
+#  ifdef __clang__
+#   define __hidden_proto(name, thread, internal, attrs...)           \
+      extern thread __typeof (name) name \
+      __hidden_proto_hiddenattr (attrs); \
+      _Pragma (__redefine(name, internal))
+/* Note that this macro does not use __hidden_asmname, since it produces a string.  */
+#   define __redefine(name, internal) __stringize(redefine_extname name internal)
+#   define __stringize(X) #X
+#  else
+#   define __hidden_proto(name, thread, internal, attrs...)	     \
   extern thread __typeof (name) name __asm__ (__hidden_asmname (#internal)) \
   __hidden_proto_hiddenattr (attrs);
+#  endif
 #  define __hidden_asmname(name) \
   __hidden_asmname1 (__USER_LABEL_PREFIX__, name)
 #  define __hidden_asmname1(prefix, name) __hidden_asmname2(prefix, name)
-- 
2.32.0

