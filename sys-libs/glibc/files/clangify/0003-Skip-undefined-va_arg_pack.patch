From 754b0e03ee2400e5c0ae3e03a5148661fd252130 Mon Sep 17 00:00:00 2001
From: Stan Shebs <stanshebs@google.com>
Date: Fri, 19 Jan 2018 09:31:04 -0800
Subject: [PATCH 03/19] Skip undefined va_arg_pack

---
 misc/sys/cdefs.h           | 5 +++++
 sysdeps/generic/ldsodefs.h | 4 ++++
 2 files changed, 9 insertions(+)

diff --git a/misc/sys/cdefs.h b/misc/sys/cdefs.h
index ab57d4a065..34dbacbb1a 100644
--- a/misc/sys/cdefs.h
+++ b/misc/sys/cdefs.h
@@ -463,9 +463,14 @@
 /* GCC 4.3 and above allow passing all anonymous arguments of an
    __extern_always_inline function to some other vararg function.  */
 #if __GNUC_PREREQ (4,3)
+#if defined(__clang__)
+# define __va_arg_pack() __VA_ARGS__
+# define __va_arg_pack_len() 0
+#else
 # define __va_arg_pack() __builtin_va_arg_pack ()
 # define __va_arg_pack_len() __builtin_va_arg_pack_len ()
 #endif
+#endif
 
 /* It is possible to compile containing GCC extensions even if GCC is
    run in pedantic mode if the uses are carefully marked using the
diff --git a/sysdeps/generic/ldsodefs.h b/sysdeps/generic/ldsodefs.h
index c26860430c..e30680e5e9 100644
--- a/sysdeps/generic/ldsodefs.h
+++ b/sysdeps/generic/ldsodefs.h
@@ -831,7 +831,11 @@ _dl_dprintf (int fd, const char *fmt, ...)
 {
   /* Use local declaration to avoid includign <stdio.h>.  */
   extern int __dprintf(int fd, const char *format, ...) attribute_hidden;
+#if defined(__clang__)
+  __dprintf (fd, fmt);
+#else
   __dprintf (fd, fmt, __builtin_va_arg_pack ());
+#endif
 }
 #endif
 
-- 
2.32.0

