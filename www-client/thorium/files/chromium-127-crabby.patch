--- a/third_party/blink/renderer/platform/image-decoders/BUILD.gn
+++ b/third_party/blink/renderer/platform/image-decoders/BUILD.gn
@@ -74,12 +74,9 @@
     sources += [
       "avif/avif_image_decoder.cc",
       "avif/avif_image_decoder.h",
-      "avif/crabbyavif_image_decoder.cc",
-      "avif/crabbyavif_image_decoder.h",
     ]
 
     deps += [
-      "//third_party/crabbyavif",
       "//third_party/libavif",
       "//third_party/libavifinfo",
     ]
--- a/third_party/blink/renderer/platform/image-decoders/image_decoder.cc
+++ b/third_party/blink/renderer/platform/image-decoders/image_decoder.cc
@@ -47,7 +47,6 @@
 
 #if BUILDFLAG(ENABLE_AV1_DECODER)
 #include "third_party/blink/renderer/platform/image-decoders/avif/avif_image_decoder.h"
-#include "third_party/blink/renderer/platform/image-decoders/avif/crabbyavif_image_decoder.h"
 #endif
 
 namespace blink {
@@ -192,9 +191,7 @@
     return "image/bmp";
   }
 #if BUILDFLAG(ENABLE_AV1_DECODER)
-  if (base::FeatureList::IsEnabled(blink::features::kCrabbyAvif)
-          ? CrabbyAVIFImageDecoder::MatchesAVIFSignature(fast_reader)
-          : AVIFImageDecoder::MatchesAVIFSignature(fast_reader)) {
+  if (AVIFImageDecoder::MatchesAVIFSignature(fast_reader)) {
     return "image/avif";
   }
 #endif
@@ -300,11 +300,7 @@
                                                 max_decoded_bytes);
 #if BUILDFLAG(ENABLE_AV1_DECODER)
   } else if (mime_type == "image/avif") {
-    if (base::FeatureList::IsEnabled(blink::features::kCrabbyAvif)) {
-      decoder = std::make_unique<CrabbyAVIFImageDecoder>(
-          alpha_option, high_bit_depth_decoding_option, color_behavior,
-          max_decoded_bytes, animation_option);
-    } else {
+    if (true) {
       decoder = std::make_unique<AVIFImageDecoder>(
           alpha_option, high_bit_depth_decoding_option, color_behavior,
           max_decoded_bytes, animation_option);
