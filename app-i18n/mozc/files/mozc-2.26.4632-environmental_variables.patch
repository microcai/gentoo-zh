https://github.com/google/mozc/issues/470

--- a/src/base/system_util.cc	2022-06-27 02:02:49.363848587 +0800
+++ b/src/base/system_util.cc	2022-06-27 02:25:41.701524057 +0800
@@ -239,6 +239,11 @@
 
 std::string UserProfileDirectoryImpl::GetUserProfileDirectory() const {
 #if defined(OS_CHROMEOS)
+  const char *configuration_dir_env = Environ::GetEnv("MOZC_CONFIGURATION_DIR");
+  if (configuration_dir_env) {
+    return configuration_dir_env;
+  }
+
   // TODO(toka): Must use passed in user profile dir which passed in. If mojo
   // platform the user profile is determined on runtime.
   // It's hack, the user profile dir should be passed in. Although the value in
@@ -258,13 +263,23 @@
 #elif defined(OS_IOS)
   // OS_IOS block must be placed before __APPLE__ because both macros are
   // currently defined on iOS.
-  //
+
+  const char *configuration_dir_env = Environ::GetEnv("MOZC_CONFIGURATION_DIR");
+  if (configuration_dir_env) {
+    return configuration_dir_env;
+  }
+
   // On iOS, use Caches directory instead of Application Spport directory
   // because the support directory doesn't exist by default.  Also, it is backed
   // up by iTunes and iCloud.
   return FileUtil::JoinPath({MacUtil::GetCachesDirectory(), kProductPrefix});
 
 #elif defined(OS_WIN)
+  const char *configuration_dir_env = Environ::GetEnv("MOZC_CONFIGURATION_DIR");
+  if (configuration_dir_env) {
+    return configuration_dir_env;
+  }
+
   DCHECK(SUCCEEDED(Singleton<LocalAppDataDirectoryCache>::get()->result()));
   std::string dir = Singleton<LocalAppDataDirectoryCache>::get()->path();
 
@@ -277,6 +292,11 @@
   return FileUtil::JoinPath(dir, kProductNameInEnglish);
 
 #elif defined(__APPLE__)
+  const char *configuration_dir_env = Environ::GetEnv("MOZC_CONFIGURATION_DIR");
+  if (configuration_dir_env) {
+    return configuration_dir_env;
+  }
+
   std::string dir = MacUtil::GetApplicationSupportDirectory();
 #ifdef GOOGLE_JAPANESE_INPUT_BUILD
   dir = FileUtil::JoinPath(dir, "Google");
@@ -289,6 +309,11 @@
 #endif  //  GOOGLE_JAPANESE_INPUT_BUILD
 
 #elif defined(OS_LINUX)
+  const char *configuration_dir_env = Environ::GetEnv("MOZC_CONFIGURATION_DIR");
+  if (configuration_dir_env) {
+    return configuration_dir_env;
+  }
+
   // 1. If "$HOME/.mozc" already exists,
   //    use "$HOME/.mozc" for backward compatibility.
   // 2. If $XDG_CONFIG_HOME is defined
@@ -421,6 +446,11 @@
 #endif  // OS_WIN
 
 std::string SystemUtil::GetServerDirectory() {
+  const char *server_dir_env = Environ::GetEnv("MOZC_SERVER_DIR");
+  if (server_dir_env) {
+    return server_dir_env;
+  }
+
 #ifdef OS_WIN
   DCHECK(SUCCEEDED(Singleton<ProgramFilesX86Cache>::get()->result()));
 #if defined(GOOGLE_JAPANESE_INPUT_BUILD)
@@ -477,6 +507,11 @@
 }
 
 std::string SystemUtil::GetDocumentDirectory() {
+  const char *documents_dir_env = Environ::GetEnv("MOZC_DOCUMENTS_DIR");
+  if (documents_dir_env) {
+    return documents_dir_env;
+  }
+
 #if defined(OS_LINUX)
 
 #ifndef MOZC_DOCUMENT_DIR
