diff --git a/Telegram/SourceFiles/application.cpp b/Telegram/SourceFiles/application.cpp
index 83e1334..e512c30 100644
--- a/Telegram/SourceFiles/application.cpp
+++ b/Telegram/SourceFiles/application.cpp
@@ -95,7 +95,10 @@ namespace {
 
 Application::Application(int &argc, char **argv) : PsApplication(argc, argv),
     serverName(psServerPrefix() + cGUIDStr()), closing(false),
-	updateRequestId(0), updateReply(0), updateThread(0), updateDownloader(0), _translator(0) {
+	#ifndef TDESKTOP_DISABLE_AUTOUPDATE
+	updateRequestId(0), updateReply(0), updateThread(0), updateDownloader(0),
+	#endif
+	_translator(0) {
 
 	DEBUG_LOG(("Application Info: creation.."));
 
@@ -179,9 +182,11 @@ Application::Application(int &argc, char **argv) : PsApplication(argc, argv),
 	connect(&socket, SIGNAL(readyRead()), this, SLOT(socketReading()));
 	connect(&server, SIGNAL(newConnection()), this, SLOT(newInstanceConnected()));
 	connect(this, SIGNAL(aboutToQuit()), this, SLOT(closeApplication()));
+	#ifndef TDESKTOP_DISABLE_AUTOUPDATE
 	connect(&updateCheckTimer, SIGNAL(timeout()), this, SLOT(startUpdateCheck()));
 	connect(this, SIGNAL(updateFailed()), this, SLOT(onUpdateFailed()));
 	connect(this, SIGNAL(updateReady()), this, SLOT(onUpdateReady()));
+	#endif
 	connect(this, SIGNAL(applicationStateChanged(Qt::ApplicationState)), this, SLOT(onAppStateChanged(Qt::ApplicationState)));
 	//connect(&writeUserConfigTimer, SIGNAL(timeout()), this, SLOT(onWriteUserConfig()));
 	//writeUserConfigTimer.setSingleShot(true);
@@ -196,6 +201,7 @@ Application::Application(int &argc, char **argv) : PsApplication(argc, argv),
 	}
 }
 
+#ifndef TDESKTOP_DISABLE_AUTOUPDATE
 void Application::updateGotCurrent() {
 	if (!updateReply || updateThread) return;
 
@@ -259,6 +265,7 @@ void Application::onUpdateFailed() {
 	cSetLastUpdateCheck(unixtime());
 	Local::writeSettings();
 }
+#endif
 
 void Application::regPhotoUpdate(const PeerId &peer, MsgId msgId) {
 	photoUpdates.insert(msgId, peer);
@@ -432,11 +439,16 @@ void Application::onSwitchTestMode() {
 }
 
 Application::UpdatingState Application::updatingState() {
+	#ifndef TDESKTOP_DISABLE_AUTOUPDATE
 	if (!updateThread) return Application::UpdatingNone;
 	if (!updateDownloader) return Application::UpdatingReady;
 	return Application::UpdatingDownload;
+	#else
+	return Application::UpdatingNone;
+	#endif
 }
 
+#ifndef TDESKTOP_DISABLE_AUTOUPDATE
 int32 Application::updatingSize() {
 	if (!updateDownloader) return 0;
 	return updateDownloader->size();
@@ -446,6 +458,7 @@ int32 Application::updatingReady() {
 	if (!updateDownloader) return 0;
 	return updateDownloader->ready();
 }
+#endif
 
 FileUploader *Application::uploader() {
 	if (!::uploader) ::uploader = new FileUploader();
@@ -489,6 +502,7 @@ void Application::uploadProfilePhoto(const QImage &tosend, const PeerId &peerId)
 	App::uploader()->uploadMedia(newId, ready);
 }
 
+#ifndef TDESKTOP_DISABLE_AUTOUPDATE
 void Application::stopUpdate() {
 	if (updateReply) {
 		updateReply->abort();
@@ -542,6 +556,7 @@ void Application::startUpdateCheck(bool forceWait) {
 		updateCheckTimer.start((updateInSecs + 5) * 1000);
 	}
 }
+#endif
 
 namespace {
 	QChar _toHex(ushort v) {
@@ -644,11 +659,13 @@ void Application::socketError(QLocalSocket::LocalSocketError e) {
 		return App::quit();
 	}
 
+	#ifndef TDESKTOP_DISABLE_AUTOUPDATE
 	if (!cNoStartUpdate() && checkReadyUpdate()) {
 		cSetRestartingUpdate(true);
 		DEBUG_LOG(("Application Info: installing update instead of starting app.."));
 		return App::quit();
 	}
+	#endif
 
 	startApp();
 }
@@ -835,13 +852,15 @@ Application::~Application() {
 	App::deinitMedia();
 	deinitImageLinkManager();
 	mainApp = 0;
-	delete updateReply;
 	delete ::uploader;
+	#ifndef TDESKTOP_DISABLE_AUTOUPDATE
+	delete updateReply;
 	updateReply = 0;
 	if (updateDownloader) updateDownloader->deleteLater();
 	updateDownloader = 0;
 	if (updateThread) updateThread->quit();
 	updateThread = 0;
+	#endif
 
 	delete window;
 
diff --git a/Telegram/SourceFiles/application.h b/Telegram/SourceFiles/application.h
index 694db88..c94ce93 100644
--- a/Telegram/SourceFiles/application.h
+++ b/Telegram/SourceFiles/application.h
@@ -49,8 +49,10 @@ public:
 		UpdatingReady,
 	};
 	UpdatingState updatingState();
+	#ifndef TDESKTOP_DISABLE_AUTOUPDATE
 	int32 updatingSize();
 	int32 updatingReady();
+	#endif
 
 	FileUploader *uploader();
 	void uploadProfilePhoto(const QImage &tosend, const PeerId &peerId);
@@ -78,11 +80,13 @@ public:
 
 signals:
 
+	#ifndef TDESKTOP_DISABLE_AUTOUPDATE
 	void updateChecking();
 	void updateLatest();
 	void updateDownloading(qint64 ready, qint64 total);
 	void updateReady();
 	void updateFailed();
+	#endif
 
 	void peerPhotoDone(PeerId peer);
 	void peerPhotoFail(PeerId peer);
@@ -91,7 +95,9 @@ signals:
 
 public slots:
 
+	#ifndef TDESKTOP_DISABLE_AUTOUPDATE
 	void startUpdateCheck(bool forceWait = false);
+	#endif
 	void socketConnected();
 	void socketError(QLocalSocket::LocalSocketError e);
 	void socketDisconnected();
@@ -103,11 +109,13 @@ public slots:
 	void readClients();
 	void removeClients();
 
+	#ifndef TDESKTOP_DISABLE_AUTOUPDATE
 	void updateGotCurrent();
 	void updateFailedCurrent(QNetworkReply::NetworkError e);
 
 	void onUpdateReady();
 	void onUpdateFailed();
+	#endif
 
 	void photoUpdated(MsgId msgId, const MTPInputFile &file);
 
@@ -142,12 +150,14 @@ private:
 
 	Window *window;
 
+	#ifndef TDESKTOP_DISABLE_AUTOUPDATE
 	mtpRequestId updateRequestId;
 	QNetworkAccessManager updateManager;
 	QNetworkReply *updateReply;
 	SingleTimer updateCheckTimer;
 	QThread *updateThread;
 	UpdateDownloader *updateDownloader;
+	#endif
 
 	QTimer writeUserConfigTimer;
 
diff --git a/Telegram/SourceFiles/autoupdater.cpp b/Telegram/SourceFiles/autoupdater.cpp
index 2d4771c..87cdba1 100644
--- a/Telegram/SourceFiles/autoupdater.cpp
+++ b/Telegram/SourceFiles/autoupdater.cpp
@@ -15,6 +15,9 @@ GNU General Public License for more details.
 Full license: https://github.com/telegramdesktop/tdesktop/blob/master/LICENSE
 Copyright (c) 2014 John Preston, https://desktop.telegram.org
 */
+
+#ifndef TDESKTOP_DISABLE_AUTOUPDATE
+
 #include "stdafx.h"
 #include "application.h"
 #include "pspecific.h"
@@ -534,3 +537,5 @@ bool checkReadyUpdate() {
 #endif
 	return true;
 }
+
+#endif
diff --git a/Telegram/SourceFiles/autoupdater.h b/Telegram/SourceFiles/autoupdater.h
index 097f335..f8580c6 100644
--- a/Telegram/SourceFiles/autoupdater.h
+++ b/Telegram/SourceFiles/autoupdater.h
@@ -17,6 +17,8 @@ Copyright (c) 2014 John Preston, https://desktop.telegram.org
 */
 #pragma once
 
+#ifndef TDESKTOP_DISABLE_AUTOUPDATE
+
 #include <QtNetwork/QLocalSocket>
 #include <QtNetwork/QLocalServer>
 #include <QtNetwork/QNetworkReply>
@@ -60,3 +62,5 @@ private:
 };
 
 bool checkReadyUpdate();
+
+#endif
diff --git a/Telegram/SourceFiles/intro/intro.cpp b/Telegram/SourceFiles/intro/intro.cpp
index 0a6bace..b1bd08a 100644
--- a/Telegram/SourceFiles/intro/intro.cpp
+++ b/Telegram/SourceFiles/intro/intro.cpp
@@ -43,7 +43,9 @@ namespace {
 			countryForReg = nearest.vcountry.c_string().v.c_str();
 			emit signalEmitOn->countryChanged();
 		}
+		#ifndef TDESKTOP_DISABLE_AUTOUPDATE
 		if (App::app()) App::app()->startUpdateCheck();
+		#endif
 	}
 }
 
diff --git a/Telegram/SourceFiles/main.cpp b/Telegram/SourceFiles/main.cpp
index e282a88..d5de06b 100644
--- a/Telegram/SourceFiles/main.cpp
+++ b/Telegram/SourceFiles/main.cpp
@@ -78,6 +78,7 @@ int main(int argc, char *argv[]) {
 
 	DEBUG_LOG(("Application Info: Telegram done, result: %1").arg(result));
 
+	#ifndef TDESKTOP_DISABLE_AUTOUPDATE
 	if (cRestartingUpdate()) {
 		if (DevVersion) {
 			LOG(("Writing 'devversion' file before launching the Updater!"));
@@ -90,7 +91,9 @@ int main(int argc, char *argv[]) {
 
 		DEBUG_LOG(("Application Info: executing updater to install update.."));
 		psExecUpdater();
-	} else if (cRestarting()) {
+	} else
+	#endif
+	if (cRestarting()) {
 		DEBUG_LOG(("Application Info: executing Telegram, because of restart.."));
 		psExecTelegram();
 	}
diff --git a/Telegram/SourceFiles/mainwidget.cpp b/Telegram/SourceFiles/mainwidget.cpp
index 0013557..c283c34 100644
--- a/Telegram/SourceFiles/mainwidget.cpp
+++ b/Telegram/SourceFiles/mainwidget.cpp
@@ -2768,7 +2768,9 @@ void MainWidget::start(const MTPUser &user) {
 
 	cSetOtherOnline(0);
 	App::feedUsers(MTP_vector<MTPUser>(1, user));
+	#ifndef TDESKTOP_DISABLE_AUTOUPDATE
 	App::app()->startUpdateCheck();
+	#endif
 	MTP::send(MTPupdates_GetState(), rpcDone(&MainWidget::gotState));
 	update();
 	if (!cStartUrl().isEmpty()) {
diff --git a/Telegram/SourceFiles/settingswidget.cpp b/Telegram/SourceFiles/settingswidget.cpp
index 641eb49..d4af55e 100644
--- a/Telegram/SourceFiles/settingswidget.cpp
+++ b/Telegram/SourceFiles/settingswidget.cpp
@@ -126,9 +126,11 @@ SettingsInner::SettingsInner(SettingsWidget *parent) : QWidget(parent),
 
 	// general
 	_changeLanguage(this, lang(lng_settings_change_lang)),
+	#ifndef TDESKTOP_DISABLE_AUTOUPDATE
 	_autoUpdate(this, lang(lng_settings_auto_update), cAutoUpdate()),
 	_checkNow(this, lang(lng_settings_check_now)),
 	_restartNow(this, lang(lng_settings_update_now)),
+	#endif
 
     _supportTray(cSupportTray()),
 	_workmodeTray(this, lang(lng_settings_workmode_tray), (cWorkMode() == dbiwmTrayOnly || cWorkMode() == dbiwmWindowAndTray)),
@@ -221,9 +223,11 @@ SettingsInner::SettingsInner(SettingsWidget *parent) : QWidget(parent),
 
 	// general
 	connect(&_changeLanguage, SIGNAL(clicked()), this, SLOT(onChangeLanguage()));
+	#ifndef TDESKTOP_DISABLE_AUTOUPDATE
 	connect(&_autoUpdate, SIGNAL(changed()), this, SLOT(onAutoUpdate()));
 	connect(&_checkNow, SIGNAL(clicked()), this, SLOT(onCheckNow()));
 	connect(&_restartNow, SIGNAL(clicked()), this, SLOT(onRestartNow()));
+	#endif
 
 	connect(&_workmodeTray, SIGNAL(changed()), this, SLOT(onWorkmodeTray()));
 	connect(&_workmodeWindow, SIGNAL(changed()), this, SLOT(onWorkmodeWindow()));
@@ -241,11 +245,13 @@ SettingsInner::SettingsInner(SettingsWidget *parent) : QWidget(parent),
 	_newVersionText = lang(lng_settings_update_ready) + ' ';
 	_newVersionWidth = st::linkFont->m.width(_newVersionText);
 
+	#ifndef TDESKTOP_DISABLE_AUTOUPDATE
 	connect(App::app(), SIGNAL(updateChecking()), this, SLOT(onUpdateChecking()));
 	connect(App::app(), SIGNAL(updateLatest()), this, SLOT(onUpdateLatest()));
 	connect(App::app(), SIGNAL(updateDownloading(qint64,qint64)), this, SLOT(onUpdateDownloading(qint64,qint64)));
 	connect(App::app(), SIGNAL(updateReady()), this, SLOT(onUpdateReady()));
 	connect(App::app(), SIGNAL(updateFailed()), this, SLOT(onUpdateFailed()));
+	#endif
 
 	// chat options
 	connect(&_replaceEmojis, SIGNAL(changed()), this, SLOT(onReplaceEmojis()));
@@ -296,6 +302,7 @@ SettingsInner::SettingsInner(SettingsWidget *parent) : QWidget(parent),
 
 	updateOnlineDisplay();
 
+	#ifndef TDESKTOP_DISABLE_AUTOUPDATE
 	switch (App::app()->updatingState()) {
 	case Application::UpdatingDownload:
 		setUpdatingState(UpdatingDownload, true);
@@ -304,6 +311,9 @@ SettingsInner::SettingsInner(SettingsWidget *parent) : QWidget(parent),
 	case Application::UpdatingReady: setUpdatingState(UpdatingReady, true); break;
 	default: setUpdatingState(UpdatingNone, true); break;
 	}
+	#else
+	_updatingState = UpdatingNone;
+	#endif
 
 	updateConnectionType();
 
@@ -420,6 +430,7 @@ void SettingsInner::paintEvent(QPaintEvent *e) {
 	p.drawText(_left + st::setHeaderLeft, top + st::setHeaderTop + st::setHeaderFont->ascent, lang(lng_settings_section_general));
 	top += st::setHeaderSkip;
 
+	#ifndef TDESKTOP_DISABLE_AUTOUPDATE
 	top += _autoUpdate.height(); 
 	QString textToDraw;
 	if (cAutoUpdate()) {
@@ -438,6 +449,7 @@ void SettingsInner::paintEvent(QPaintEvent *e) {
 	p.setPen(st::setVersionColor->p);
 	p.drawText(_left + st::setVersionLeft, top + st::setVersionTop + st::linkFont->ascent, textToDraw);
 	top += st::setVersionHeight;
+	#endif
 
     if (cPlatform() == dbipWindows) {
         top += _workmodeTray.height() + st::setLittleSkip;
@@ -643,10 +655,12 @@ void SettingsInner::resizeEvent(QResizeEvent *e) {
 	// general
 	top += st::setHeaderSkip;
 	_changeLanguage.move(_left + st::setWidth - _changeLanguage.width(), top - st::setHeaderSkip + st::setHeaderTop + st::setHeaderFont->ascent - st::linkFont->ascent);
+	#ifndef TDESKTOP_DISABLE_AUTOUPDATE
 	_autoUpdate.move(_left, top);
 	_checkNow.move(_left + st::setWidth - _checkNow.width(), top + st::cbDefFlat.textTop); top += _autoUpdate.height();
 	_restartNow.move(_left + st::setWidth - _restartNow.width(), top + st::setVersionTop);
 	top += st::setVersionHeight;
+	#endif
 
     if (cPlatform() == dbipWindows) {
         _workmodeTray.move(_left, top); top += _workmodeTray.height() + st::setLittleSkip;
@@ -946,8 +960,10 @@ void SettingsInner::showAll() {
 
 	// general
 	_changeLanguage.show();
+	#ifndef TDESKTOP_DISABLE_AUTOUPDATE
 	_autoUpdate.show();
 	setUpdatingState(_updatingState, true);
+	#endif
     if (cPlatform() == dbipWindows) {
         _workmodeTray.show();
         _workmodeWindow.show();
@@ -1148,6 +1164,7 @@ void SettingsInner::onUpdateLocalStorage() {
 	update();
 }
 
+#ifndef TDESKTOP_DISABLE_AUTOUPDATE
 void SettingsInner::onAutoUpdate() {
 	cSetAutoUpdate(!cAutoUpdate());
 	Local::writeSettings();
@@ -1173,8 +1190,10 @@ void SettingsInner::onCheckNow() {
 	cSetLastUpdateCheck(0);
 	App::app()->startUpdateCheck();
 }
+#endif
 
 void SettingsInner::onRestartNow() {
+	#ifndef TDESKTOP_DISABLE_AUTOUPDATE
 	checkReadyUpdate();
 	if (_updatingState == UpdatingReady) {
 		cSetRestartingUpdate(true);
@@ -1182,6 +1201,10 @@ void SettingsInner::onRestartNow() {
 		cSetRestarting(true);
 		cSetRestartingToSettings(true);
 	}
+	#else
+	cSetRestarting(true);
+	cSetRestartingToSettings(true);
+	#endif
 	App::quit();
 }
 
@@ -1558,6 +1581,7 @@ void SettingsInner::onTempDirClearFailed(int task) {
 	update();
 }
 
+#ifndef TDESKTOP_DISABLE_AUTOUPDATE
 void SettingsInner::setUpdatingState(UpdatingState state, bool force) {
 	if (_updatingState != state || force) {
 		_updatingState = state;
@@ -1611,6 +1635,7 @@ void SettingsInner::onUpdateReady() {
 void SettingsInner::onUpdateFailed() {
 	setUpdatingState(UpdatingFail);
 }
+#endif
 
 void SettingsInner::onPhotoUpdateStart() {
 	showAll();
diff --git a/Telegram/SourceFiles/settingswidget.h b/Telegram/SourceFiles/settingswidget.h
index 1de46a3..691e5b4 100644
--- a/Telegram/SourceFiles/settingswidget.h
+++ b/Telegram/SourceFiles/settingswidget.h
@@ -95,8 +95,10 @@ public slots:
 	void onUpdatePhoto();
 	void onUpdatePhotoCancel();
 
+	#ifndef TDESKTOP_DISABLE_AUTOUPDATE
 	void onAutoUpdate();
 	void onCheckNow();
+	#endif
 	void onRestartNow();
 
 	void onPasscode();
@@ -145,11 +147,13 @@ public slots:
 
 	void onLocalStorageClear();
 
+	#ifndef TDESKTOP_DISABLE_AUTOUPDATE
 	void onUpdateChecking();
 	void onUpdateLatest();
 	void onUpdateDownloading(qint64 ready, qint64 total);
 	void onUpdateReady();
 	void onUpdateFailed();
+	#endif
 
 	void onShowSessions();
 
@@ -196,8 +200,10 @@ private:
 
 	// general
 	LinkButton _changeLanguage;
+	#ifndef TDESKTOP_DISABLE_AUTOUPDATE
 	FlatCheckbox _autoUpdate;
 	LinkButton _checkNow, _restartNow;
+	#endif
     bool _supportTray; // cSupportTray() value on settings create
 	FlatCheckbox _workmodeTray, _workmodeWindow;
 	FlatCheckbox _autoStart, _startMinimized, _sendToMenu;
@@ -268,8 +274,10 @@ private:
 	void offPasswordDone(const MTPBool &result);
 	bool offPasswordFail(const RPCError &error);
 
+	#ifndef TDESKTOP_DISABLE_AUTOUPDATE
 	void setUpdatingState(UpdatingState state, bool force = false);
 	void setDownloadProgress(qint64 ready, qint64 total);
+	#endif
 
 
 };
diff --git a/Telegram/SourceFiles/sysbuttons.cpp b/Telegram/SourceFiles/sysbuttons.cpp
index 29e11ac..039dbb8 100644
--- a/Telegram/SourceFiles/sysbuttons.cpp
+++ b/Telegram/SourceFiles/sysbuttons.cpp
@@ -143,7 +143,9 @@ UpdateBtn::UpdateBtn(QWidget *parent, Window *window, const QString &text) : Sys
 }
 
 void UpdateBtn::onClick() {
+	#ifndef TDESKTOP_DISABLE_AUTOUPDATE
 	checkReadyUpdate();
+	#endif
 	if (App::app()->updatingState() == Application::UpdatingReady) {
 		cSetRestartingUpdate(true);
 	} else {
diff --git a/Telegram/SourceFiles/title.cpp b/Telegram/SourceFiles/title.cpp
index 564b7c7..6de0c04 100644
--- a/Telegram/SourceFiles/title.cpp
+++ b/Telegram/SourceFiles/title.cpp
@@ -80,7 +80,9 @@ TitleWidget::TitleWidget(Window *window)
 	connect(&_contacts, SIGNAL(clicked()), this, SLOT(onContacts()));
 	connect(&_about, SIGNAL(clicked()), this, SLOT(onAbout()));
 	connect(wnd->windowHandle(), SIGNAL(windowStateChanged(Qt::WindowState)), this, SLOT(stateChanged(Qt::WindowState)));
+	#ifndef TDESKTOP_DISABLE_AUTOUPDATE
 	connect(App::app(), SIGNAL(updateReady()), this, SLOT(showUpdateBtn()));
+	#endif
 	
     if (cPlatform() != dbipWindows) {
         _minimize.hide();
