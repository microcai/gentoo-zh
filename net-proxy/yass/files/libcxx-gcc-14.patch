diff --git a/third_party/libc++/trunk/include/__type_traits/remove_pointer.h b/third_party/libc++/trunk/include/__type_traits/remove_pointer.h
index 54390a193..eea523ab2 100644
--- a/third_party/libc++/trunk/include/__type_traits/remove_pointer.h
+++ b/third_party/libc++/trunk/include/__type_traits/remove_pointer.h
@@ -22,9 +22,6 @@ template <class _Tp>
 struct remove_pointer {
   using type _LIBCPP_NODEBUG = __remove_pointer(_Tp);
 };
-
-template <class _Tp>
-using __remove_pointer_t = __remove_pointer(_Tp);
 #else
 // clang-format off
 template <class _Tp> struct _LIBCPP_TEMPLATE_VIS remove_pointer                      {typedef _LIBCPP_NODEBUG _Tp type;};
@@ -33,10 +30,10 @@ template <class _Tp> struct _LIBCPP_TEMPLATE_VIS remove_pointer<_Tp* const>
 template <class _Tp> struct _LIBCPP_TEMPLATE_VIS remove_pointer<_Tp* volatile>       {typedef _LIBCPP_NODEBUG _Tp type;};
 template <class _Tp> struct _LIBCPP_TEMPLATE_VIS remove_pointer<_Tp* const volatile> {typedef _LIBCPP_NODEBUG _Tp type;};
 // clang-format on
+#endif // !defined(_LIBCPP_WORKAROUND_OBJCXX_COMPILER_INTRINSICS) && __has_builtin(__remove_pointer)

 template <class _Tp>
 using __remove_pointer_t = typename remove_pointer<_Tp>::type;
-#endif // !defined(_LIBCPP_WORKAROUND_OBJCXX_COMPILER_INTRINSICS) && __has_builtin(__remove_pointer)

 #if _LIBCPP_STD_VER >= 14
 template <class _Tp>
